# Configuration for a Voron 2.1 CoreXY printer using dual SKR V1.3s
# Created by "Iakabos" March 2019
# with macros section from "Volcom's" config
# This config is for a 350mm build

[mcu]
# Controls X/Y/E steppers, X/Y endstops,
# Hotend heater/thermistor, and hotend/parts fans
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_mcu-if00
#restart_method: rpi_usb

[mcu z]
# Controls Z steppers, Z probe/endstop,
# Bed heater/thermistor, and controller/exhaust fans
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_mcu_z-if00
#restart_method: rpi_usb

[stepper_x] # B motor
# connected to X on mcu
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
step_distance: .0125
# connected to X+ on mcu
endstop_pin: P1.28
position_min: 0
position_endstop: 354
position_max: 354
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[stepper_y] # A motor
# connected to Y on mcu
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
step_distance: .0125
# connected to Y+ on mcu
endstop_pin: P1.26
position_min: 0
position_endstop: 356
position_max: 356
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[stepper_z]
# connected to X on mcu z
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
step_distance: 0.00250
# connected to Z- on mcu z
endstop_pin: ^z:P1.25

position_endstop: 1.51
position_max: 350
position_min: -2
homing_speed: 10.0
second_homing_speed: 2.0
homing_retract_dist: 2.0
homing_positive_dir: false
 
[stepper_z1]
# connected to Y on mcu z
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
step_distance: 0.00250
 
[stepper_z2]
# connected to Z on mcu z
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
step_distance: 0.00250

[stepper_z3]
# connected to E0 on mcu z
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
step_distance: 0.00250

[force_move]
enable_force_move: true

[probe]
# connected to Z+ on mcu_z
pin: ^z:P1.24
x_offset: 0.0
y_offset: 25.0
z_offset: 0.00
speed: 2

#	this is required for gantry leveling and replaces your G28 command
#	with the gcode used here.  Used to home X/Y/Z with mechanical switches
[homing_override]
set_position_z: 0
gcode:
	G90
	G0 Z15 F1800
	G28 X Y
#	For the FSR Switch
	G0 X232 Y356 F3000
	G28 Z
	G0 Z5 F3000
	G0 X177 Y175 F9000
 
#	gantry_level is to put a moving gantry into plan with
#	a fixed bed.  Must have 4 steppers on the gantry
[quad_gantry_level]
gantry_corners:
	-56,0
	410,426
points:
	50,35
	50,271
	304,271
	304,35
speed: 100
horizontal_move_z: 5
samples: 3
sample_retract_dist: 2.0
 
[extruder]
# connected to E0 on mcu
step_pin: P2.13
dir_pin: P0.11
enable_pin: P2.12
# 555 steps per mm 
step_distance: 0.00177935943
nozzle_diameter: 0.400
	
# PA can be disabled by declaring a 0.0 value
pressure_advance: 0.07
# time seconds to look ahead for PA moves default is 0.010 or 10ms
pressure_advance_lookahead_time: 0.030
filament_diameter: 1.750
max_extrude_only_distance: 800.0

# connected to HE0 on mcu
heater_pin: P2.7
max_power: 1.0
sensor_type: NTC 100K beta 3950
# connected to TH0 on mcu
sensor_pin: P0.24
smooth_time: 3.0
max_power: 1.0
control: pid
pid_Kp=10
pid_Ki: 0.9
pid_Kd: 96.4
min_extrude_temp: 0
min_temp: 0
max_temp: 300

# hotend fan
[heater_fan my_nozzle_fan]
# connected to HE1 on mcu
pin: P2.4
max_power: 1.0
kick_start_time: 0.500
heater: extruder
heater_temp: 50.0
fan_speed: 1.00

# parts fan
[fan]
# connected to FAN on mcu
pin: P2.3
max_power: 1.0
kick_start_time: 0.500

# electronics fan
[heater_fan electronics_bay]
# connected to HE1 on mcu z
pin: z:P2.4
max_power: 1.0
kick_start_time: 0.500
heater: heater_bed
heater_temp: 40.0
fan_speed: 1.00

# exhaust fan
[heater_fan chamber_fan]
# connected to FAN on mcu z
pin: z:P2.3
max_power: 1.0
kick_start_time: 0.500
heater: heater_bed
heater_temp: 40.0
fan_speed: 0.85
 
[heater_bed]
# connected to servo on mcu z
heater_pin: z:P2.0
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
# connected to TB on mcu z
sensor_pin: z:P0.23
smooth_time: 3.0
max_power: 0.60
# PID for 90C
control: pid
pid_Kp=42.652
pid_Ki=1.360
pid_Kd=334.419

min_temp: 0
max_temp: 115
 


# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
[display]
lcd_type: uc1701
cs_pin: z:P1.18
#sclk_pin: z:P1.15
#sid_pin: z:P1.16
a0_pin: z:P1.19
encoder_pins: ^z:P3.26, ^z:P3.25
click_pin: ^!z:P0.28
contrast: 63

[output_pin lcd_R]
pin: z:P1.21
pwm: True
value: 0
cycle_time: 0.001

[output_pin lcd_G]
pin: z:P1.22
pwm: True
value: 0
cycle_time: 0.001

[output_pin lcd_B]
pin: z:P1.23
pwm: True
value: 1
cycle_time: 0.001

[printer]
# settings below are the max and can't be commanded over in gcode
kinematics: corexy
max_velocity: 350
max_accel: 3000
max_z_velocity: 45
max_z_accel: 350
square_corner_velocity: 10.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The default is 5mm/s.

[idle_timeout]
# high motor off time so I don't have to relevel gantry often
timeout: 600000

	
#	 Macros

#	macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
	G28
	quad_gantry_level
	nozzle_clean
	
#	macro to level the gantry.  use G32 in the terminal to call
[gcode_macro square_gantry_to_machine]
gcode:
	G28
	nozzle_clean
	quad_gantry_level
	G28
	quad_gantry_level
	nozzle_clean
	G28
		
#    Use print_start for the slicer starting script
#    change for your starting scripting needs
[gcode_macro print_start_1]
gcode:
	M104 S0 ;cancel set temp
	G21  ; set units to mm
	G90  ; use absolute coordinates
	T0  ; select tool 0
	G92 E0.0  ; reset e count
	M220 S100 ; reset speed multiplier

[gcode_macro print_start_2]
gcode:
	G32 				; autolevel with belts
	bed_mesh_calibrate	; mesh level the bed
	nozzle_clean		; clean nozzle
	
[gcode_macro print_start_3]
gcode:
	nozzle_clean		; clean nozzle	
	
#    Use print_end for you slicer ending script    
[gcode_macro print_end]
gcode:
	G91  							;relative positioning
	G1 E-5.00 F1000  				;retract 5mm of filament
	G1 Z+1.00 X-20.0 Y-20.0 F20000  ;short quick move to disengage from print
	G1 Z+10.00  F20000  			;move Z-Axis 10mm away from part

	G90  				;absolute positioning
	G1 X13 Y300  		; move gantry close to nozzle scrubber

	G91  				; relative positioning
	G1 E-8.00 F500  	;retract additional filament to prevent oozing

	G90 				;absolute positioning
	M104 S0  			;turn off hotend
	M140 S0  			;turn off heatbed
	M106 S0  			; shut off blower

#	Set Temps for ABS Warmup
[gcode_macro abs_warmup_temp]
gcode:
	M140 S90  ;set bed temperature and do not wait
	M109 S190  ;set print head temperature and wait

#	Set Temps for ABS Loading
[gcode_macro abs_loading_temp]
gcode:
	M140 S90  ;set bed temperature and do not wait
	M109 S235  ;set print head temperature and wait
   	
[gcode_macro nozzle_clean]
gcode:
	G1 Z6.80 F3000				;lift nozzle 25mm
	G1 X13 Y348 F7500			;move to nozzle scrubber
	G91 						;relative positioning
	G1 Z-3.50 F3000				;move nozzle to end of brush and into bristles
	G1 X+60.00 F6000			;scrub forwards once
	G1 X-60.00 F6000			;scrub backwards once
	G1 X+60.00 F6000			;scrub forwards once
	G1 X-60.00 F6000			;scrub backwards once
	G1 X+60.00 F6000			;scrub forwards once
	G1 X-60.00 F6000			;scrub backwards once
	G1 X+60.00 F6000			;scrub forwards once
	G1 X-60.00 F6000			;scrub backwards once
	G1 Z+10.00 F3000			;lift z 10mm
	G90							;absolute positioning
	G1 X13 Y300	F9000			;move nozzle away from brush
	
#	Macro to Babystep Up 0.02mm
[gcode_macro babystep_up]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=0.02

#	Macro to Babystep Down 0.02mm
[gcode_macro babystep_down]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=-0.02

[gcode_macro M150]
default_parameter_R: 0
default_parameter_G: 0
default_parameter_B: 1
gcode:
	SET_PIN PIN=lcd_R VALUE={R}
	SET_PIN PIN=lcd_G VALUE={G}
	SET_PIN PIN=lcd_B VALUE={B}

# Pinouts for SKR V1.3
# X_ENABLE_PIN       P2.1
# X_STEP_PIN         P2.2
# X_DIR_PIN          P2.6
# X_MIN_PIN          P1.29
# X_MAX_PIN          P1.28

# Y_ENABLE_PIN       P2.8
# Y_STEP_PIN         P0.19
# Y_DIR_PIN          P0.20
# Y_MIN_PIN          P1.27
# Y_MAX_PIN          P1.26

# Z_ENABLE_PIN       P0.21
# Z_STEP_PIN         P0.22
# Z_DIR_PIN          P2.11
# Z_MIN_PIN          P1.25
# Z_MAX_PIN          P1.24

# E0_ENABLE_PIN      P2.12
# E0_STEP_PIN        P2.13
# E0_DIR_PIN         P0.11
# E0_HEATER          P2.7
# E0_THERMISTOR      P0.24

# E1_ENABLE_PIN      P0.10
# E1_STEP_PIN        P0.1
# E1_DIR_PIN         P0.0
# E1_HEATER          P2.4
# E1_THERMISTOR      P0.25

# BED_HEATER         P2.5
# BED_THERMISTOR     P0.23
# FAN                P2.3
# SERVO              P2.0

# X_UART_TX          P4.29
# X_UART_RX/SPI_CS   P1.17
# Y_UART_TX          P1.16
# Y_UART_RX/SPI_CS   P1.15
# Z_UART_TX          P1.14
# Z_UART_RX/SPI_CS   P1.10
# E0_UART_TX         P1.9
# E0_UART_RX/SPI_CS  P1.8
# E1_UART_TX         P1.4
# E1_UART_RX/SPI_CS  P1.1
# MISO               P0.5
# MOSI               P4.28
# SCK                P0.4

# BED_MESH_CALIBRATE: Perform Mesh Bed Leveling
# BED_MESH_CLEAR: Clear the Mesh so no z-adjusment is made
# BED_MESH_MAP: Probe the bed and serialize output
# BED_MESH_OUTPUT: Retrieve interpolated grid of probed z-points
# FIRMWARE_RESTART: Restart firmware, host, and reload config
# G32       : G-Code macro
# QUAD_GANTRY_LEVEL: Conform a moving, twistable gantry to the shape of a stationary bed
# LOAD_FILAMENT: G-Code macro
# MENU      : Menu do things
# NOZZLE_CLEAN: G-Code macro
# PID_CALIBRATE: Run PID calibration test
# PRINT_END : G-Code macro
# PRINT_START: G-Code macro
# PROBE     : Probe Z-height at current XY position
# QUERY_ENDSTOPS: Report on the status of each endstop
# QUERY_PROBE: Return the status of the z-probe
# RESTART   : Reload config file and restart host software
# SET_GCODE_OFFSET: Set a virtual offset to g-code positions
# SET_PRESSURE_ADVANCE: Set pressure advance parameters
# SET_VELOCITY_LIMIT: Set printer velocity limits
# STATUS    : Report the printer status
# STEPPER_BUZZ: Oscillate a given stepper to help id it
# UNLOAD_FILAMENT: G-Code macro
# Z_TILT_ADJUST: Adjust the Z tilt
